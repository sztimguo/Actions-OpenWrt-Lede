#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: N1_Mini

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  #schedule:
    #- cron: 00 2 */10 * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: build/N1/N1_mini.config
  DIY_P1_SH: build/N1/diy_part1.sh
  DIY_P2_SH: build/N1/diy_part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  SERVERCHAN_SCKEY: false
  BOT: true
  CACHEFLAG: false
  RECENT_LASTEST: 3
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    
    steps:
    - name: Checkout Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@v3

    - name: Initialization environment ÂÆâË£ÖÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 lib32stdc++6 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl rename libpcap0.8-dev swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV       
        echo "FILE_UPLOAD_TIME=$(date "+%Y%m%d-%H%M")"  >> $GITHUB_ENV
        echo "NETIP=package/base-files/files/etc/networkip" >> $GITHUB_ENV
        echo "WEBWEB=package/base-files/files/etc/webweb.sh" >> $GITHUB_ENV
        echo "ZZZ=package/lean/default-settings/files/zzz-default-settings" >> $GITHUB_ENV
        
    - name: Clone source code ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Cache
      if: env.CACHEFLAG == 'true' && !cancelled()
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: Load custom feeds Âä†ËΩΩËá™ÂÆö‰πâËÆæÁΩÆ
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Update feeds ‰∏ãËΩΩÊèí‰ª∂
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds ËØªÂèñÊèí‰ª∂
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration Êõ¥ÊîπËÆæÁΩÆ
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH connection to Actions SSHÈìæÊé•ÁÆ°ÁêÜ(CTRL+CËøõÂÖ•ÈìæÊé•ÔºåCTRL+DÊñ≠ÂºÄÈìæÊé•)
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package ‰∏ãËΩΩÂÆâË£ÖÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware ÂºÄÂßãÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s

        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        
        cp .config ${UPLOAD}/mini.config
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs-mini.tar.gz
        cp -r *.xz ${UPLOAD}/
        echo "::set-output name=status::success"
                
    - name: Package OpenWrt with flippy script(+o)  ‰ΩøÁî®flippyËÑöÊú¨ÊâìÂåÖ(+o) 
      if: steps.compile.outputs.status == 'success' && !cancelled()
      uses: mingxiaoyu/package-flippy-openwrt@main
      with:
        types: s905d
        out: ${{ env.UPLOAD }}
        whoami: Ss
        openwrt-path: $GITHUB_WORKSPACE/openwrt/bin/targets/*/*

    - name: Package OpenWrt with flippy script(+) Áî®flippyËÑöÊú¨ÊâìÂåÖ(+) 
      if: steps.compile.outputs.status == 'success' && !cancelled()
      uses: mingxiaoyu/package-flippy-openwrt@main
      with:
        types: s905d
        kernel-version: latest+
        out: ${{ env.UPLOAD }}
        openwrt-path: openwrt/bin/targets/*/*
        
    - name: Upload bin directory to Actions ‰∏ä‰º†binÂéãÁº©ÁõÆÂΩï
      uses: actions/upload-artifact@v2
      if: env.UPLOAD_BIN_DIR == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_UPLOAD_TIME }}
        path: openwrt/bin
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore
        
    - name: Organize files Êï¥ÁêÜÁºñËØëÂ•ΩÁöÑÂõ∫‰ª∂
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages && mkdir packages
        find -name "*esxi-flat.vmdk*" | xargs -i mv -f {} packages
        find -name "*kernel.bin*" | xargs -i mv -f {} packages
        find -name "*.manifest*" | xargs -i mv -f {} packages
        find -name "*vmlinuz*" | xargs -i mv -f {} packages
        find -name "*esxi.vmdk*" | xargs -i mv -f {} packages
        rm -rf packages
        mv -f config.buildinfo mini-diff.config
        cp mini-diff.config ${UPLOAD}/mini-diff.config
        echo "::set-output name=status::success"
            
    - name: Upload firmware directory ‰∏ä‰º†Âõ∫‰ª∂Âà∞github
      uses: actions/upload-artifact@v2
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_5.4${{ env.DEVICE_NAME }}${{ env.FILE_UPLOAD_TIME }}
        path: $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore
    
    - name: Upload firmware to cowtransfer ‰∏ä‰º†Âõ∫‰ª∂Âà∞NNÁΩëÁõò
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${UPLOAD} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Upload firmware to WeTransfer ‰∏ä‰º†Âõ∫‰ª∂Âà∞WTÁΩëÁõò
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${UPLOAD} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Generate release tag ÂàõÂª∫releaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo "FILE_DATE=$(date "+%Y-%m-%d %H:%M")"  >> $GITHUB_ENV
        echo "FILE_TIME=$(date "+%YÂπ¥%mÊúà%dÊó•-%HÁÇπ")" >> $GITHUB_ENV
        echo "tag_name=$(date "+%Y%m%d%H%M")"  >> $GITHUB_ENV
        touch release.txt
        echo "[Âõ∫‰ª∂Ê∫êÁ†Å](https://github.com/coolsnowwolf/lede)" >> release.txt
        echo "
          Áî±Ë°∑ÊÑüË∞¢ÊâÄÊúâ‰∏∫openwrtÊó†ÁßÅÂ•âÁåÆÁöÑÂ§ß‰Ω¨‰ª¨
          ÈªòËÆ§IPÔºö192.168.1.2 ÈªòËÆ§ÂØÜÁ†ÅÔºö password
          ÂÖ®Êñ∞Âà∑ÂÖ•emmcÊñπÊ≥ïÔºö
             1. Âõ∫‰ª∂Âà∑ÂÖ•UÁõò„ÄÇ
             2. cd root
             3. ./install-to-emmc.sh
             4. ÊãîÊéâUÁõòÔºåÊñ≠ÁîµÈáçÂêØ„ÄÇ" >> release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [ÂõΩÂÜÖNNÁΩëÁõò](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [ÂõΩÂ§ñWTÁΩëÁõò](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
      with:
        name: ${{ env.FILE_DATE }} „Äå N1-closed-mini „Äç
        tag_name: ${{ env.tag_name }}-N1mini
        body_path: release.txt
        files: ${{ env.UPLOAD }}/*

    - name: Delete workflow runs Âà†Èô§workflow
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 0
        
    - name: Remove old Releases Âà†Èô§ÊóßÁâà Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}

    - name: Wechat notice ÂæÆ‰ø°ÈÄöÁü•
      uses: emon100/Action-Serverchan@v2
      if: steps.tag.outputs.status == 'success' && env.SERVERCHAN_SCKEY == 'true' && !cancelled()
      with:
        SCKEY: ${{ secrets.SERVERCHAN_SCKEY }}
        text: ÊÅ≠Âñú‰∏ª‰∫∫„Äå N1-closed-mini „ÄçÂõ∫‰ª∂ÁºñËØëÊàêÂäüÔºÅ
        desp: Êàë‰∫≤Áà±ÁöÑ‰∏ª‰∫∫ÔºöÊÇ®„Äå Actions-OpenWrt-Lede„Äç‰ªìÂ∫ìÁºñËØëÁöÑ${{ env.FILE_DATE }} „Äå N1-closed-mini „ÄçÂõ∫‰ª∂È°∫Âà©ÁºñËØëÂÆåÊàê‰∫ÜÔºÅ
        
    - name: Bot notice ÁîµÊä•Êú∫Âô®‰∫∫‰ø°ÊÅØÈÄöÁü•
      if: steps.tag.outputs.status == 'success' && env.BOT == 'true' && !cancelled()
      run: |
        curl -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" -d "text=Êàë‰∫≤Áà±ÁöÑ‚ú®‰∏ª‰∫∫‚ú®ÔºöÊÇ®‰ΩøÁî®„Äå Actions-OpenWrt-Lede„ÄçÊñá‰ª∂Â§πÁºñËØëÁöÑ${{ env.FILE_DATE }} „Äå N1-closed-mini „ÄçÂõ∫‰ª∂È°∫Âà©ÁºñËØëÂÆåÊàê‰∫ÜÔºÅüíêÈìæÊé•Ôºöhttps://github.com/roacn/Actions-OpenWrt-Lede/releases" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
